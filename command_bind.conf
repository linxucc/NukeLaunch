[DEFAULT]
# The default working directory:
#       A working directory is where you execute your command on your server.
#       Assume this app will firstly 'cd' into this directory, then fire your command.

working_directory = /tmp/nukelaunch


# Create the directory if working directory does not exist. Default is yes.

mkdir_if_working_directory_not_exist = yes


# Accept arguments or not. Default is no.
#       If set yes, Arguments can be passed in an URL like this: '127.0.0.1:8095/your_keyword/arg1/arg2/arg3'
#       Just like you type the arguments in a real command-line but use '/' instead of a whitespace.
#       Default is no, if you need arguments, override this with a yes in your command config sections.

accept_arguments = no


# The template used to render the result,
#       a default template is provided, but you can also override it with your own.
#       This is useful when you want to make a custom interface to your command line app.

render_template_file =



# Here is some example:


[list_files_in_root]
#       'list_files_in_root' is a sensible name we give this command, you can choose whatever you like,
#        it's used to organize configs, this only appears in config files and console logs.

command = ls
#       The exact command you want to execute. if it's 'ls', then ls is executed, if it's 'ls -l', ls -l is executed.

http_keyword = listroot
#       The path in the url we want to bind to this command, in this example, it's 'listroot',
#       so you can type 'your_ip:port/listroot/' in your url box, press ENTER, and 'ls' will execute.

accept_arguments = yes
#       Options in each config entry will override same options in the DEFAULT, we set yes, so if we want to do 'ls -l',
#       we type 'your_ip:port/listroot/-l' and enter, the command 'ls -l' will be executed. Same goes with any arguments.

working_directory = /
#       Options in each config entry will override same options in the DEFAULT, we set to '/',
#       so the 'ls' will be executed in '/', the root directory.

[list_files_in_root_with_details]
command = ls -l
#       Note that we can also apply predefined arguments to the command here, in this case, the 'ls -l' is the command,
#       so if there's no additional arguments coming, the 'ls -l' is executed, if any, the arguments will append following.

http_keyword = listrootdetail
#       Url 'your_ip:port/listrootdetail' is bind to command 'ls -l'

accept_arguments = yes
#       Any arguments will be append following 'ls -l'

working_directory = /
#       'ls -l' will be executed in / , the root directory.


# Uncomment below, Bind your own command:

#[your_command_sensible_name]
#command = your_command
#http_keyword = your_keyword
#working dir = your_dir_or_delete_this_line_and_use_default
#accept_arguments = if_no_need_set_to_no




# Have fun!